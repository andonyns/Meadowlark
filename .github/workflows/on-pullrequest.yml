name: On Pull Request

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "Meadowlark-js/**"
      - ".github/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: abcdefgh1!

defaults:
  run:
    working-directory: Meadowlark-js

jobs:
  scan-actions:
    name: Scan Actions
    uses: ed-fi-alliance-oss/ed-fi-actions/.github/workflows/repository-scanner.yml@main

  upgrade:
    # Upgrade packages on PR only to avoid a double update when pushed to main
    name: Upgrade packages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Meadowlark-js
    permissions:
      contents: write
    steps:
      - name: Checkout the Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0w

      - name: Get versions changes
        id: versions
        run: |
          if [ ${{ github.event_name }} == 'pull_request' ]; then
            suggested=v$(cat lerna.json | jq -r .version)
            current=$(git describe --tags $(git rev-list --tags --max-count=1))
            echo "Versions: Lerna: $suggested. Current: $current"
            echo "skip-update=$([[ "$suggested" == "$current" ]] && echo true)" >>$GITHUB_OUTPUT
          else
            echo "skip-update=true" >>$GITHUB_OUTPUT
          fi

      - name: Update versions
        if: steps.versions.outputs.skip-update
        run: npx lerna@6.6.2 version prerelease --exact --no-git-tag-version --yes

      - name: Set Version
        if: steps.versions.outputs.skip-update
        id: set-version
        run: |
          version=v$(cat lerna.json | jq -r .version)
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - uses: planetscale/ghcommit-action@4131649dbf2fdf1eb34421702972a5af7b0a8731 #v0.1.18
        if: steps.versions.outputs.skip-update
        with:
          commit_message: "${{steps.set-version.outputs.version}}"
          repo: ${{ github.repository }}
          branch: ${{ github.head_ref || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
